#!/bin/bash
cd /tmp/rom
ls vendor/motorola/

# Normal build step
. build/envsetup.sh
lunch aosp_chef-userdebug
export CCACHE_DIR=~/ccache
export CCACHE_EXEC=$(which ccache)
export USE_CCACHE=1
ccache -M 20G
ccache -o compression=true
ccache -z
make bacon -j100 & # dont remove that '&'
ccache -s
#and dont use below codes for first 1 or 2 times, to get ccache uploaded,


# upload function for uploading rom zip file! I don't want unwanted builds in my google drive haha!
up(){
	curl --upload-file $1 http://oshi.at/nossl
	# 3 days, 5 GB limit
}

# It's recommended to use google drive(rclone) as upload solution for coping with the time limit. Un-comment next 3 lines to upload with rclone in drive. Also change apon and junk according to your config name, uploading folder of drive
#up(){
#	time rclone copy $1 apon:junk -P # apon is my rclone config name,
#}

tg(){
	bot_api=5270961973:AAGIcg_uHwSJDK0UdoK3L_XoK28HDm6gOAI
	your_telegram_id=$1
	msg=$2	curl -s "https://api.telegram.org/bot${bot_api}/sendmessage" --data "text=$msg&chat_id=${your_telegram_id}"
}

id=-1001429926659

# compile plox
make bacon -j8 &
sleep 185m
kill %1


# Upload rom zip file if succeed to build! Send notification to tg! And send shell to tg if build fails!
if [ -e out/target/product/X00TD/INA.*.zip ]; then
send_zip=$(up out/target/product/X00TD/INA.*.zip) && tg $id "Build Succeed!
$send_zip"
fi
ccache -s # Let's print ccache statistics finally
